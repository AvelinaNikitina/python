# 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных свидетельствует пустая строка.
text_ = []
with open("user_text.txt", 'w') as f_obj:
    line = f"{input('Введите данные, чтобы завершить, введите пустую строку: ')}\n"
    while line != '\n':
        f_obj.write(line)
        line = f"{input('Введите данные, чтобы завершить, введите пустую строку: ')}\n"
with open("user_text.txt", 'r') as f:
    content = f.readlines()
    print(content, '\n')

# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
# выполнить подсчет количества строк, количества слов в каждой строке.

with open("poem.txt", 'r') as poem:
    lines = 0
    while True:
        content = poem.readline()
        if not content:
            break
        words = content.count(" ")
        print(f"В строке {words + 1} слов")
        lines += 1
print(f"Всего строк: {lines}")

# 3. Создать текстовый файл (не программно),
# построчно записать фамилии сотрудников и величину их окладов.
# Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
# Выполнить подсчет средней величины дохода сотрудников.

with open('salary.txt', 'r') as my_file:
    salary = []
    poor = []
    my_list = my_file.read().split('\n')
    for i in my_list:
        i = i.split()
        if int(i[1]) < 20000:
            poor.append(i[0])
            salary.append(i[1])
print(f'\nОклад меньше 20.000 {poor}, средний оклад {sum(map(int, salary)) / len(salary)}\n')

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.
rus_word = {"One": "Один", "Two": "Два", "Three": "Три", "Four": "Четыре"}
new_file = []
with open("text.txt", 'r') as f:
    for i in f:
        i = i.split(' ', 1)
        new_file.append(rus_word.get(i[0]) + ' ' + i[1])
    print(new_file)
with open('text_new.txt', 'w') as tex:
    tex.writelines(new_file)

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
with open('numbers.txt', 'w+') as file:
    line = input('\nВведите цифры через пробел \n')
    file.writelines(line)
    numbers = line.split()
    print(sum(map(int, numbers)))

# 6. Необходимо создать (не программно) текстовый файл,
# где каждая строка описывает учебный предмет и наличие лекционных, практических и
# лабораторных занятий по этому предмету и их количество.
# Важно, чтобы для каждого предмета не обязательно были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему.
# Вывести словарь на экран.
# Примеры строк файла:
# Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря:
# {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
subj = {}
with open("dic.txt", "a+") as object_:
    for line in object_:
        name, stats = line.split(":")
        name_sums = sum(map(int, "".join([i for i in stats if i == " " or i.isdigit()]).split()))
        subj[name] = name_sums
print(subj)

# Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме:
# название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
# а также словарь со средней прибылью. Если фирма получила убытки,
# также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджеры контекста.

import json

with open('workers.json', 'w') as write_js:
    with open('workers.txt', 'r') as file:
        subjects = {}
        analytic = {}
        total_profit, profit_ = 0, 0
        lines = file.read().split("\n")
        for comp_info in lines:
            comp_info = comp_info.split()
            prof = int(comp_info[2]) - int(comp_info[3])
            subjects[comp_info[0]] = prof
            if prof > 0:
                total_profit += prof
                profit_ += 1
            analytic["average"] = total_profit / profit_
        all_list = [subjects, analytic]
    json.dump(all_list, write_js)
